(DML' length 1 LENGTH ((%a list) /-> int))
(PUTPROP (QUOTE twoof) 1 (QUOTE NUMARGS))
(PUTPROP (QUOTE twoof) (MKTIDY (QUOTE ((%a list) /-> (%a # %a)))) (QUOTE MLTYPE))
(PUTPROP (QUOTE threeof) 1 (QUOTE NUMARGS))
(PUTPROP (QUOTE threeof) (MKTIDY (QUOTE ((%a list) /-> (%a # (%a # %a))))) (QUOTE MLTYPE))
(DML' rev 1 REVERSE ((%a list) /-> (%a list)))
(DML' mem 2 MEMBER ((%a # (%a list)) /-> bool))
(PUTPROP (QUOTE flat) 1 (QUOTE NUMARGS))
(PUTPROP (QUOTE flat) (MKTIDY (QUOTE (((%a list) list) /-> (%a list)))) (QUOTE MLTYPE))
(PUTPROP (QUOTE map) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE map) (MKTIDY (QUOTE (((%a /-> %b) # (%a list)) /-> (%b list)))) (QUOTE MLTYPE))
(PUTPROP (QUOTE exists) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE exists) (MKTIDY (QUOTE (((%a /-> bool) # (%a list)) /-> bool))) (QUOTE MLTYPE))
(PUTPROP (QUOTE forall) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE forall) (MKTIDY (QUOTE (((%a /-> bool) # (%a list)) /-> bool))) (QUOTE MLTYPE))
(PUTPROP (QUOTE revitlist) 3 (QUOTE NUMARGS))
(PUTPROP (QUOTE revitlist) (MKTIDY (QUOTE (((%a /-> (%b /-> %b)) # ((%a list) # %b)) /-> %b))) (QUOTE MLTYPE))
(PUTPROP (QUOTE find) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE find) (MKTIDY (QUOTE (((%a /-> bool) # (%a list)) /-> %a))) (QUOTE MLTYPE))
(PUTPROP (QUOTE tryfind) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE tryfind) (MKTIDY (QUOTE (((%a /-> %b) # (%a list)) /-> %b))) (QUOTE MLTYPE))
(PUTPROP (QUOTE filter) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE filter) (MKTIDY (QUOTE (((%a /-> bool) # (%a list)) /-> (%a list)))) (QUOTE MLTYPE))
(PUTPROP (QUOTE mapfilter) 2 (QUOTE NUMARGS))
(PUTPROP (QUOTE mapfilter) (MKTIDY (QUOTE (((%a /-> %b) # (%a list)) /-> (%b list)))) (QUOTE MLTYPE))
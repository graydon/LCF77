COMMENT ⊗   VALID 00005 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	           (DIN
C00005 00003	% GP.LAP %
C00011 00004	% SYMBS %
C00016 00005	% ptble %
C00019 ENDMK
C⊗;
           (DIN
  (LCF FWH)  (CLRBFI.LAP)
	 (LCF FWH)  (GP.LAP)
	 (LCF FWH)  SYMBS
	 (LCF FWH)  PTBLE
  (LCF FWH)  (LEAN.LAP)
  (LCF FWH)  LEANPROP
  (LCF FWH)  (OPP.LAP)
  (LCF FWH)  (LCFO.LAP)
  (LCF FWH)  (LCFO.LSP)
  (LCF FWH)  (LCFM.LAP)
  (LCF FWH)  (LCFM.LSP)
  (LCF FWH)  (MLPRIN.LAP)
  (LCF FWH)  (SHARE.LAP)
  (LCF FWH)  (TYPEOL.LAP)
  (LCF FWH)  (TYPEML.LAP)
  (LCF FWH)  (TYPEML.LSP)
  (LCF FWH)  (TRAN.LAP)
  (LCF FWH)  (TRAN.LSP)
  (LCF FWH)  (DML.LAP)
  (LCF FWH)  (DML.LSP)
  (LCF FWH)  (WRITML.LAP)
  (LCF FWH)  (WRITML.LSP)
  (LCF FWH)  (TML.LAP)
  (LCF FWH)  (TML.LSP)
  (LCF FWH)  (THYFNS.LAP)
  (LCF FWH)  (THYFNS.LSP)
  (LCF FWH)  (THYFNS.ML)
  (LCF FWH)  (GEN.ML)
  (LCF FWH)  (LIS.LAP)
  (LCF FWH)  (LIS.LSP)
  (LCF FWH)  (LIS.ML)
  (LCF FWH)  (OL0.LAP)
  (LCF FWH)  (OL0.LSP)
  (LCF FWH)  (PPLAMB.LSP)
  (LCF FWH)  (PPLAMB.ML)
  (LCF FWH)  (OL1.LAP)
  (LCF FWH)  (OL1.LSP)
  (LCF FWH)  (OL2.LAP)
  (LCF FWH)  (OL2.LSP)
  (LCF FWH)  (OL2.ML)
  (LCF FWH)  (OL3.LAP)
  (LCF FWH)  (OL3.LSP)
  (LCF FWH)  (OL3.ML)
  (LCF FWH)  (PCRUL.ML)
  (LCF FWH)  (RUL.ML)
  (LCF FWH)  (SIMPL.LAP)
  (LCF FWH)  (SIMPL.LSP)
  (LCF FWH)  (SIMPL.ML)
  (LCF FWH)  (DRUL.ML)
  (LCF FWH)  (TAC.ML)
  (LCF FWH)  (TCL.ML)
  (LCF FWH)  (TRACE.LAP)
  (LCF FWH)  (TRACE.LSP)
  (LCF FWH)  TMLINI)
)
(REMPROP @ML @SHARE)
(REMPROP @ML @SHARECONS)
% GP.LAP %

(LAP GENLINK SUBR) 
	(MOVE 1 (SPECIAL LINKCOUNT))(CALL 1 (E ADD1))(MOVEM 1 (SPECIAL LINKCOUNT))(MOVEI 2 (QUOTE link))
	(JCALL 2 (E XCONS))
NIL 


(LAP TYCONSTP SUBR) 
	(MOVEI 2 (QUOTE CANON))(JCALL 2 (E GET))
NIL 


(LAP CONSTP SUBR) 
	(MOVEI 2 (QUOTE const))(JCALL 2 (E GET))
NIL 


(LAP TRIPLE SUBR) 
	(EXCH 2 3)(EXCH 1 3)(CALL 2 (E CONS))(MOVE 2 3)(JCALL 2 (E XCONS))
NIL 


(LAP STRIP SUBR) 
	(PUSH P 1)(PUSH P 2)(HLRZ@ 1 2)(CAME 1 -1 P)(JRST 0 G0002)(HRRZ@ 1 2)(JRST 0 G0001)
G0002 (MOVEI 1 (QUOTE dest))(CALL 1 (E EXPLODE))(PUSH P 1)(MOVE 1 -2 P)(CALL 1 (E EXPLODE))
	(MOVE 2 1)(POP P 1)(CALL 2 (E *APPEND))(CALL 1 (E READLIST))(CALL 1 (E ERR))
G0001 (SUB P (C 0 0 2 2))(POPJ P)
NIL 


(LAP REVASSOC SUBR) 
	(PUSH P 1)(PUSH P 2)(JUMPE 2 G0003)
G0001 (HLRZ@ 1 0 P)(HRRZ@ 1 1)(CAME 1 -1 P)(JRST 0 G0008)(HLRZ@ 1 0 P)(JRST 0 G0002)
G0008 (HRRZ@ 1 0 P)(MOVEM 1 0 P)(JUMPN 1 G0001)
G0003 (MOVEI 1 (QUOTE NIL))
G0002 (SUB P (C 0 0 2 2))(POPJ P)
NIL 


(LAP REVASSOC1 SUBR) 
	(CALL 2 (E REVASSOC))(PUSH P 1)(JUMPE 1 G0003)(HLRZ@ 1 1)
G0003 (SUB P (C 0 0 1 1))(POPJ P)
NIL 


(LAP ASSOC1 SUBR) 
	(CALL 2 (E ASSOC))(PUSH P 1)(JUMPE 1 G0003)(HRRZ@ 1 1)
G0003 (SUB P (C 0 0 1 1))(POPJ P)
NIL 


(LAP ITLIST SUBR) 
	(PUSH P 1)(MOVE 1 2)(PUSH P 2)(PUSH P 3)(CALL 1 (E REVERSE))(MOVEM 1 -1 P)
G0001 (MOVE 1 -1 P)(JUMPN 1 G0007)(MOVE 1 0 P)(JRST 0 G0002)
G0007 (MOVE 2 0 P)(HLRZ@ 1 -1 P)(CALLF@ 2 -2 P)(MOVEM 1 0 P)(HRRZ@ 1 -1 P)(JRST 0 (G0001 -1))
G0009 (MOVEI 1 (QUOTE NIL))
G0002 (SUB P (C 0 0 3 3))(POPJ P)
NIL 


(LAP XGENSYM SUBR) 
	(MOVEI 2 (QUOTE (C O U N T)))(PUSH P 1)(CALL 2 (E CONS))(CALL 1 (E READLIST))(MOVEI 2 (QUOTE 12))
	(MOVEI 3 (QUOTE 12))(JSP 6 SPECBIND)(0 2 (SPECIAL BASE))(0 3 (SPECIAL IBASE))(PUSH P 1)
	(MOVE 1 -1 P)(CALL 1 (E EXPLODE))(MOVEM 1 -1 P)(MOVE 1 0 P)(CALL 1 (E *EVAL))(CALL 1 (E ADD1))
	(MOVE 2 1)(MOVE 1 0 P)(CALL 2 (E SET))(CALL 1 (E EXPLODE))(MOVE 2 1)(EXCH 1 -1 P)
	(CALL 2 (E *APPEND))(CALL 1 (E MAKNAM))(SUB P (C 0 0 2 2))(JRST 0 SPECSTR)
NIL 


(LAP ADDPROP SUBR) 
	(PUSH P 2)(MOVE 2 3)(PUSH P 1)(CALL 2 (E GET))(EXCH 2 -1 P)(CALL 2 (E XCONS))(MOVE 2 1)
	(POP P 1)(CALL 3 (E PUTPROP))(HLRZ@ 1 1)(SUB P (C 0 0 1 1))(POPJ P)
NIL 


(LAP SELECTQ FSUBR) 
	(PUSH P 1)(HLRZ@ 1 1)(CALL 1 (E *EVAL))(PUSH P 1)(HRRZ@ 1 -1 P)(MOVEM 1 -1 P)(PUSH P (C 0 0 (QUOTE NIL))~
)(PUSH P (C 0 0 (QUOTE NIL)))
G0001 (HRRZ@ 1 -3 P)(JUMPN 1 G0009)(HLRZ@ 1 -3 P)(CALL 1 (E *EVAL))(JRST 0 G0002)
G0009 (HLRZ@ 1 -3 P)(MOVEM 1 0 P)(HLRZ@ 1 1)(MOVEM 1 -1 P)(CAMN 1 -2 P)(JRST 0 G0015)(CALL 1 (E ATOM))
	(JUMPN 1 G0014)(MOVE 2 -1 P)(MOVE 1 -2 P)(CALL 2 (E MEMQ))(JUMPE 1 G0014)
G0015 (HRRZ@ 2 0 P)(MOVEI 1 (QUOTE T))(CALL 2 (E CONS))(CALL 1 (E NCONS))(CALL 17 (E COND))
	(JRST 0 G0002)
G0014 (HRRZ@ 1 -3 P)(MOVEM 1 -3 P)(JRST 0 G0001)
G0026 (MOVEI 1 (QUOTE NIL))
G0002 (SUB P (C 0 0 4 4))(POPJ P)
NIL 


(DEFPROP SELECTQ (NIL . N) VALUE) 
(LAP CHARSEQ SUBR) 
	(PUSH P 1)(PUSH P 2)(PUSH P (C 0 0 (QUOTE NIL)))
G0001 (MOVE 1 -1 P)(CAIE 1 (QUOTE 0))(JRST 0 G0006)(MOVE 1 0 P)(JRST 0 G0002)
G0006 (MOVE 2 0 P)(MOVE 1 -2 P)(CALL 2 (E CONS))(MOVEM 1 0 P)(MOVE 1 -1 P)(CALL 1 (E SUB1))
	(MOVEM 1 -1 P)(JRST 0 G0001)
G0002 (SUB P (C 0 0 3 3))(POPJ P)
NIL 


(LAP PACK#1 SUBR) 
	(PUSH P 1)(PUSH P 2)(CALL 1 (E NUMBERP))(JUMPE 1 G0002)(MOVE 1 -1 P)(CALL 1 (E EXPLODE))
	(CALL 1 (E SLASHIFY))(JRST 0 G0001)
G0002 (MOVE 1 -1 P)(CALL 1 (E EXPLODE))
G0006 
G0001 (POP P 2)(SUB P (C 0 0 1 1))(JCALL 2 (E *APPEND))
NIL 


(LAP PACK SUBR) 
	(MOVEI 3 (QUOTE NIL))(MOVE 2 1)(MOVEI 1 (QUOTE PACK#1))(CALL 3 (E ITLIST))(JCALL 1 (E READLIST))
NIL 

% SYMBS %

(SETQ CMNTCHR (QUOTE %))
(SETQ CTRLDSYM @∧)

(SETQ SPACE (QUOTE / ))
(SETQ CR @/
)
(SETQ LF @/
)
(SETQ TAB @/	)
(SETQ LPAREN @/()
(SETQ RPAREN @/))
(SETQ PERIOD @/.)
(SETQ COMMA @/,)
(SETQ COLON @/:)
(SETQ SCOLON @/;)
(SETQ LBRKT @/[)
(SETQ RBRKT @/])

(SETQ ENDCNRTOK @/")
(SETQ ANTICNRTOK @/↑)
(SETQ CONDLTOK @/=/>)
(SETQ ELSETOK @/|)
(SETQ LAMTOK @/\)
(SETQ EQTOK @/=/=)
(SETQ INEQTOK @/</<)
(SETQ CONJTOK @/&)
(SETQ IMPTOK @IMP)
(SETQ QUANTTOK @/!)
(SETQ TRUTHTOK @TRUTH)
(SETQ FIXTOK @FIX)
(SETQ BOTTOK @UU)
(SETQ TTOK @TT)
(SETQ FTOK @FF)
(SETQ ARROWTOK @/-/>)
(SETQ SUMTOK @/+)
(SETQ PRODTOK @/#)
(SETQ NULLTYPTOK @/.)


(SETQ SPECTOKS @(/: /( /) /' /↑   /=/> /, /\ /.   /=/= /</< /& IMP /! /"
                  /[ /] /; /|))


(SETQ TMLSYM @;;)
(SETQ TOKQTSYM @/`)
(SETQ ESCAPESYM @//)
(SETQ EXFIXSYM @/$)
(SETQ DECTMNR @/;;)
(SETQ NEGSYM @not)
(SETQ ARROWSYM @/-/>)
(SETQ PRODSYM @/#)
(SETQ SUMSYM @/+)
(SETQ LISTSYM @list)
(SETQ NULLSYM @/.)
(SETQ CNRSYM @/")
(SETQ ENDCNRSYM @/")
(SETQ QUOTESYM @/`/`)
(SETQ TCNSTSYM @/←)
(SETQ MULSYM @/*)
(SETQ DIVSYM @//)
(SETQ PLUSSYM @/+)
(SETQ MNSSYM @/-)
(SETQ CONCSYM @/@)
(SETQ EQSYM @/=)
(SETQ LTSYM @/<)
(SETQ GTSYM @/>)
(SETQ CONJSYM @/&)
(SETQ DISJSYM @or)
(SETQ CONDLSYM @/=/>)
(SETQ LAMSYM @/\)
(SETQ ASGNSYM @/:/=)
(SETQ LABSYM @/:/:)
(SETQ ELSESYM @/|)
(SETQ TP1SYM @/?)
(SETQ TP3SYM @/?/?)
(SETQ TP5SYM @/?/\)
(SETQ TP2SYM @/!)
(SETQ TP4SYM @/!/!)
(SETQ TP6SYM @/!/\)

(SETQ TPSYMS (LIST TP1SYM TP2SYM TP3SYM TP4SYM TP5SYM TP6SYM))


(SETQ SPECSYMS @(/: /( /) /# /-/> /, /. /[ /] /; /;/; /:/= /:/: /|  
     /" /% /$ /` /`/` /← /* // /+ /- /@ /= /< /> /& /=/> /\
     /? /?/? /?/\ /! /!/! /!\))

(SETQ RSVDWDS @(let letref letrec
                deftype lettype letrectype abstype absrectype
                where whereref whererec and with in
                fail failwith or not
                test then loop else))



(SETQ TERMCONSTRS @(mk=vartok mk=consttok mk=comb mk=pair mk=abs 
                    mk=empty mk=cond mk=typed))

(SETQ WFFCONSTRS @(mk=equiv mk=inequiv mk=imp mk=conj mk=quant 
                   mk=truth))

(SETQ DECLNCONSTRS @(MK-LET MK-LETREC MK-LETREF MK-DEFTYPE 
                     MK-DEFRECTYPE MK-ABSTYPE MK-ABSRECTYPE))

(SETQ EXPRCONSTRS @(MK-BOOLCONST MK-INTCONST MK-TOKCONST MK-VAR
          MK-APPN MK-ABSTR MK-DUPL MK-EMPTY MK-NIL MK-CONDE
          MK-FAIL  MK-BINOP MK-UNOP
          MK-ASSIGN MK-LIST MK-SEQ MK-DO MK-TRAP MK-TEST  
          MK-STRAINT MK-IN MK-IND MK-QUOT MK-TYQUOT))


(SETQ TOKBEARER @"<token>")
(SETQ TOKLBEARER @"<token list>")
(SETQ NILREP @/%NIL)
(SETQ LASTVALNAME @it)
(SETQ LINKCOUNT 0)
(SETQ PPSYM @" ... ")

% ptble %

(DEFPROP PRINTTABLE
 (PRINTTABLE
  (MK-NULLTYP /.)
  (MK-INTTYP int)
  (MK-BOOLTYP bool)
  (MK-TOKTYP tok)
  (MK-TERMTYP term)
  (MK-FORMTYP form)
  (MK-TYPETYP type)
  (MK-THMTYP thm)
  (MK-VARTYP 1)
  (MK-CONSTTYP
   (COND ((NULL (CDDR %EX)) (PRINC (CADR %EX)))
	 ((NULL (CDDDR %EX)) (%PP (CADDR %EX)) (PRINC (CADR %EX)))
	 (T (%PPL (CDDR %EX) (QUOTE /() (QUOTE /,) (QUOTE /)))
	    (PRINC (CADR %EX)))))
  (MK-LISTTYP 1 list)
  (MK-PRODTYP /( 1 # 2 /))
  (MK-SUMTYP /( 1 + 2 /))
  (MK-FUNTYP /( 1 -> 2 /))
  (MK-BOOLCONST
   (PRINC (COND ((CADR %EX) (QUOTE true)) (T (QUOTE false)))))
  (MK-INTCONST 1)
  (MK-TOKCONST ` 1 `)
  (MK-TYQUOT /" : (PRINC PPSYM) /")
  (MK-QUOT /" (PRINC PPSYM) /")
  (MK-VAR 1)
  (MK-FAIL fail)
  (MK-FAILWITH failwith /  1)
  (MK-EMPTY /(/))
  (MK-DUPL /( 1 /, 2 /))
  (MK-LIST (%PPL (CDR %EX) (QUOTE /[) (QUOTE ;) (QUOTE /])))
  (MK-STRAINT /( 1 : 2 /))
  (MK-APPN /( 1 /  2 /))
  (MK-BINOP /(
	    2
	    (PRINC
	     (COND ((EQ (CADR %EX) (QUOTE %&)) (QUOTE &))
		   ((EQ (CADR %EX) (QUOTE %or)) (QUOTE " or "))
		   (T (CADR %EX))))
	    3
	    /))
  (MK-UNOP (COND ((EQ (CADR %EX) (QUOTE %-)) (PRINC (QUOTE -)))
		 (T (PRINC (CADR %EX)) (PRINC (QUOTE / ))))
	   2)
  (MK-DO do 1)
  (MK-SEQ
   (%PPL (APPEND (CADR %EX) (CDDR %EX))
	 (QUOTE / )
	 (QUOTE ;)
	 (QUOTE / )))
  (MK-ASSIGN 1 := 2)
  (MK-TEST (TESTTRAPFN T (CDR %EX)))
  (MK-TRAP 1 (TESTTRAPFN NIL (CDDR %EX)))
  (MK-ABSTR /( \ 1 /. 2 /))
  (MK-IN 1 / in/  2)
  (MK-IND 1 / in/  2)
  (MK-INA 1 / in/  2)
  (MK-LET let/  1 / =/  2)
  (MK-LETREC letrec /  1 / =/  2)
  (MK-LETREF letref /  1 / =/  2)
  (MK-DEFTYPE lettype /  (PRINC PPSYM))
  (MK-ABSTYPE abstype /  (PRINC PPSYM))
  (MK-ABSRECTYPE absrectype /  (PRINC PPSYM))
  (MK-BEGIN begin/  1)
  (MK-END end/  1))
VALUE)

